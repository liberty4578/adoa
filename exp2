Aim: Write a program for Merge Sort.
Solution:


#include <iostream>
using namespace std;
void merge(int arr[], int left, int mid, int right) {
    int left_len = mid - left + 1;
    int right_len = right - mid;
    int left_arr[left_len];
    int right_arr[right_len];
    for (int i = 0; i < left_len; i++) {
        left_arr[i] = arr[left + i];
    }
    for (int i = 0; i < right_len; i++) {
        right_arr[i] = arr[mid + 1 + i];
    }
    int i = 0, j = 0, k = left;
    while (i < left_len && j < right_len) {
        if (left_arr[i] <= right_arr[j]) {
            arr[k++] = left_arr[i++];
        } else {
            arr[k++] = right_arr[j++];
        }
    }
    while (i < left_len) {
        arr[k++] = left_arr[i++];
    }

    while (j < right_len) {
        arr[k++] = right_arr[j++];
    }
}
void mergeSort(int arr[], int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);
        merge(arr, left, mid, right);
    }
}
int main() {
    int arr[] = {1, 2, 5, 6, 8, 7, 9, 3, 4, 10};
    int size = sizeof(arr) / sizeof(arr[0]);
    mergeSort(arr, 0, size);
    cout << â€œArray after sorting: << endl;
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
}
